name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Create dist directory
      run: |
        mkdir -p dist
        echo "✅ Директория dist создана"
        
    - name: Create config.js from secrets
      run: |
        cat > dist/config.js << 'EOF'
        // config.js - Автоматически создается GitHub Actions
        // НЕ добавляйте этот файл в Git!
        
        window.SUPABASE_CONFIG = {
          url: '${{ secrets.SUPABASE_URL }}',
          anonKey: '${{ secrets.SUPABASE_ANON_KEY }}'
        };
        
        window.GEMINI_CONFIG = {
          apiKey: '${{ secrets.GEMINI_API_KEY }}',
          baseUrl: 'https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash:generateContent'
        };
        
        console.log('✅ Конфигурация загружена из GitHub Secrets');
        console.log('🗄️ Supabase URL:', window.SUPABASE_CONFIG.url);
        console.log('🔑 Supabase Key:', window.SUPABASE_CONFIG.anonKey.substring(0, 20) + '...');
        console.log('🤖 Gemini API Key:', window.GEMINI_CONFIG.apiKey.substring(0, 20) + '...');
        EOF
        
        echo "✅ config.js создан с секретами"
        
    - name: Copy application files
      run: |
        # Копируем основные файлы приложения
        cp index.html dist/
        cp app.js dist/
        cp supabase-client.js dist/
        cp README.md dist/
        cp .gitignore dist/
        cp config.example.js dist/
        
        # Проверяем содержимое dist
        echo "📁 Содержимое директории dist:"
        ls -la dist/
        
        echo "📄 Проверяем config.js:"
        head -5 dist/config.js
        
        echo "✅ Все файлы скопированы"
        
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: github-pages
        path: dist/
        retention-days: 1
        
    - name: Build complete
      run: |
        echo "🎉 Сборка завершена успешно!"
        echo "📦 Артефакт github-pages создан"
        echo "🚀 Готов к деплою на GitHub Pages"

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: github-pages
        path: dist/
        
    - name: Verify files
      run: |
        echo "🔍 Проверяем файлы для деплоя:"
        ls -la dist/
        echo "📄 Проверяем config.js:"
        head -5 dist/config.js
        echo "✅ Файлы готовы к деплою"
        
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
      with:
        path: dist/
        
    - name: Deploy complete
      run: |
        echo "🎉 Деплой завершен успешно!"
        echo "🌐 URL: ${{ steps.deployment.outputs.page_url }}"
        echo "✅ Приложение развернуто на GitHub Pages" 